# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

let 
	prl-tools = pkgs.linuxKernel.packages.linux_5_15.prl-tools;
in
{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "usbhid" "sr_mod" "prl_fs" "prl_fs_freeze" "prl_tg" "prl_notifier" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ prl-tools ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/39816efe-3879-4b35-81cf-8da1f0c51e7e";
      fsType = "ext4";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/DEF5-0423";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/d4fd8ac4-d66e-431a-a343-f7b6a9577f98"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s5.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  hardware.parallels = {
    enable = true;
    package = prl-tools;
    autoMountShares = true;
  };
  nixpkgs.config.allowUnfreePredicate = pkg: builtins.elem (lib.getName pkg) [ "prl-tools" ];
  nixpkgs.config.allowUnfree = true;

  services.udev.packages = [ prl-tools ];
  environment.systemPackages = [ prl-tools ];


  systemd.services.prltoolsd = {
          enable = true;
	  wantedBy = [ "multi-user.target" ];
	  serviceConfig = {
		  ExecStart = "${prl-tools}/bin/prltoolsd -f";
		  PIDFile = "/var/run/prltoolsd.pid";
	  };
  };

  systemd.user.services = {
    prlcc = {
      description = "Parallels Control Center";
      wantedBy = [ "graphical-session.target" ];
      serviceConfig = {
        ExecStart = "${prl-tools}/bin/prlcc";
      };
    };
    prldnd = {
      #description = "Parallels Control Center";
      wantedBy = [ "graphical-session.target" ];
      serviceConfig = {
        ExecStart = "${prl-tools}/bin/prldnd";
      };
    };
    prlcp = {
      #description = "Parallels CopyPaste Tool";
      wantedBy = [ "graphical-session.target" ];
      serviceConfig = {
        ExecStart = "${prl-tools}/bin/prlcp";
        Restart = "always";
      };
    };
    prlsga = {
      description = "Parallels Shared Guest Applications Tool";
      wantedBy = [ "graphical-session.target" ];
      serviceConfig = {
        ExecStart = "${prl-tools}/bin/prlsga";
      };
    };
    prlshprof = {
      description = "Parallels Shared Profile Tool";
      wantedBy = [ "graphical-session.target" ];
      serviceConfig = {
        ExecStart = "${prl-tools}/bin/prlshprof";
      };
    };
  };
}
